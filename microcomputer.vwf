/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CACHE_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CACHE_CLK[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CACHE_CLK";
}

SIGNAL("CACHE_CLK[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CACHE_CLK";
}

SIGNAL("CACHE_CLK[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CACHE_CLK";
}

SIGNAL("CACHE_CLK[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CACHE_CLK";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT_CLK[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CONTROL_UNIT_CLK";
}

SIGNAL("CONTROL_UNIT_CLK[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CONTROL_UNIT_CLK";
}

SIGNAL("CONTROL_UNIT_CLK[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CONTROL_UNIT_CLK";
}

SIGNAL("CONTROL_UNIT_CLK[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CONTROL_UNIT_CLK";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
}

SIGNAL("cmd0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cmd0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd0";
}

SIGNAL("cmd1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cmd1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("cmd1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("cmd1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("cmd1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("cmd1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("cmd1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("cmd1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("cmd1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cmd1";
}

SIGNAL("ADDRESSING_TYPE_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OP_CODE_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OP_CODE_OUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("OP_CODE_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP_CODE_OUT";
}

SIGNAL("PARCER_RON_NUM_OUT_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PARCER_RON_NUM_OUT_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PARCER_RON_NUM_OUT_OUT";
}

SIGNAL("PARCER_RON_NUM_OUT_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PARCER_RON_NUM_OUT_OUT";
}

SIGNAL("DF_COUNTER")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DF_COUNTER[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_COUNTER";
}

SIGNAL("DF_COUNTER[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_COUNTER";
}

SIGNAL("DF_COUNTER[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_COUNTER";
}

SIGNAL("DF_COUNTER[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_COUNTER";
}

SIGNAL("DF_RON_NUM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DF_RON_NUM[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_RON_NUM";
}

SIGNAL("DF_RON_NUM[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_RON_NUM";
}

SIGNAL("OP0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OP0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP0";
}

SIGNAL("OP1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OP1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("OP1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("OP1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("OP1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("OP1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("OP1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("OP1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("OP1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OP1";
}

SIGNAL("ron_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ron_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("ron_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("ron_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("ron_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("ron_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("ron_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("ron_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("ron_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ron_out";
}

SIGNAL("cache_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cache_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("cache_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("cache_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("cache_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("cache_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("cache_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("cache_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("cache_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cache_out";
}

SIGNAL("FLAG_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FLAG_OUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("FLAG_OUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("FLAG_OUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("FLAG_OUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("FLAG_OUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("FLAG_OUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("FLAG_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("FLAG_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FLAG_OUT";
}

SIGNAL("ALU_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALU_OUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("ALU_OUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("ALU_OUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("ALU_OUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("ALU_OUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("ALU_OUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("ALU_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("ALU_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALU_OUT";
}

SIGNAL("MEM_DATA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_DATA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_DATA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_DATA";
}

SIGNAL("MEM_ADDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MEM_ADDR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("MEM_ADDR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("MEM_ADDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("MEM_ADDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("MEM_ADDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("MEM_ADDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("MEM_ADDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("MEM_ADDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MEM_ADDR";
}

SIGNAL("DF_ADDRESS_SET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DF_ADDRESS_SET[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("DF_ADDRESS_SET[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("DF_ADDRESS_SET[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("DF_ADDRESS_SET[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("DF_ADDRESS_SET[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("DF_ADDRESS_SET[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("DF_ADDRESS_SET[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("DF_ADDRESS_SET[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DF_ADDRESS_SET";
}

SIGNAL("cach_address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cach_address[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("cach_address[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("cach_address[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("cach_address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("cach_address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("cach_address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("cach_address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("cach_address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cach_address";
}

SIGNAL("DATA_TO_CACHE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_TO_CACHE[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("DATA_TO_CACHE[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("DATA_TO_CACHE[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("DATA_TO_CACHE[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("DATA_TO_CACHE[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("DATA_TO_CACHE[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("DATA_TO_CACHE[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("DATA_TO_CACHE[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_CACHE";
}

SIGNAL("SP_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SP_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SP_OUT";
}

SIGNAL("SP_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SP_OUT";
}

SIGNAL("STACK_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("STACK_OUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("STACK_OUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("STACK_OUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("STACK_OUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("STACK_OUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("STACK_OUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("STACK_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("STACK_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "STACK_OUT";
}

SIGNAL("DATA_TO_STACK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_TO_STACK[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("DATA_TO_STACK[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("DATA_TO_STACK[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("DATA_TO_STACK[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("DATA_TO_STACK[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("DATA_TO_STACK[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("DATA_TO_STACK[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("DATA_TO_STACK[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_TO_STACK";
}

SIGNAL("over_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("stack_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("stack_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "stack_counter";
}

SIGNAL("stack_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "stack_counter";
}

SIGNAL("cb")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 33;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cb[32]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

SIGNAL("cb[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cb";
}

TRANSITION_LIST("CACHE_CLK[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 300.0;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2110.0;
	}
}

TRANSITION_LIST("CACHE_CLK[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 2110.0;
	}
}

TRANSITION_LIST("CACHE_CLK[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 1000.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 980.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 2250.0;
	}
}

TRANSITION_LIST("CACHE_CLK[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 780.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1040.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 2210.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 460;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT_CLK[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 1930.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT_CLK[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 260.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 460.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 1990.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT_CLK[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 690.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 460.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 340.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 1990.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT_CLK[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 580.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 440.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 560.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2070.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2070.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2070.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 560.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 440.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2070.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 560.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2070.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 380.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 560.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 440.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2070.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 380.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 440.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2070.0;
	}
}

TRANSITION_LIST("lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 380.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2070.0;
	}
}

TRANSITION_LIST("cmd0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 890.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 580.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 1040.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 580.0;
			LEVEL 1 FOR 460.0;
		}
		LEVEL 0 FOR 2810.0;
	}
}

TRANSITION_LIST("cmd0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1490.0;
		LEVEL 1 FOR 1080.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 2810.0;
	}
}

TRANSITION_LIST("cmd0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 2280.0;
		LEVEL 0 FOR 2540.0;
		LEVEL 1 FOR 2080.0;
		LEVEL 0 FOR 2810.0;
	}
}

TRANSITION_LIST("cmd0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2570.0;
		LEVEL 1 FOR 4620.0;
		LEVEL 0 FOR 2810.0;
	}
}

TRANSITION_LIST("cmd0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7190.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 2210.0;
	}
}

TRANSITION_LIST("cmd1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 970.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 7350.0;
	}
}

TRANSITION_LIST("cmd1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1570.0;
		LEVEL 1 FOR 1080.0;
		LEVEL 0 FOR 7350.0;
	}
}

TRANSITION_LIST("cmd1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cmd1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ADDRESSING_TYPE_OUT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7330.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 2070.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5250.0;
		LEVEL 1 FOR 2080.0;
		LEVEL 0 FOR 2670.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2710.0;
		LEVEL 1 FOR 2540.0;
		LEVEL 0 FOR 4750.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 2280.0;
		LEVEL 0 FOR 7290.0;
	}
}

TRANSITION_LIST("OP_CODE_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7930.0;
		LEVEL 1 FOR 2070.0;
	}
}

TRANSITION_LIST("PARCER_RON_NUM_OUT_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1030.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 580.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 1040.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 580.0;
			LEVEL 1 FOR 460.0;
		}
		LEVEL 0 FOR 2670.0;
	}
}

TRANSITION_LIST("PARCER_RON_NUM_OUT_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1630.0;
		LEVEL 1 FOR 1080.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 2670.0;
	}
}

TRANSITION_LIST("DF_COUNTER[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 520.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2010.0;
	}
}

TRANSITION_LIST("DF_COUNTER[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 670.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 520.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1990.0;
	}
}

TRANSITION_LIST("DF_COUNTER[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("DF_COUNTER[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("DF_RON_NUM[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2750.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 560.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 2520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_RON_NUM[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2750.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 2520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("OP0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2570.0;
	}
}

TRANSITION_LIST("OP0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 1 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2570.0;
	}
}

TRANSITION_LIST("OP0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2570.0;
	}
}

TRANSITION_LIST("OP0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2570.0;
	}
}

TRANSITION_LIST("OP0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2570.0;
	}
}

TRANSITION_LIST("OP0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2570.0;
	}
}

TRANSITION_LIST("OP0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2570.0;
	}
}

TRANSITION_LIST("OP0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 470.0;
		LEVEL X FOR 200.0;
		LEVEL 0 FOR 400.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 420.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 5160.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2570.0;
	}
}

TRANSITION_LIST("OP1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2610.0;
	}
}

TRANSITION_LIST("OP1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2610.0;
	}
}

TRANSITION_LIST("OP1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2610.0;
	}
}

TRANSITION_LIST("OP1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2610.0;
	}
}

TRANSITION_LIST("OP1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("OP1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ron_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 320.0;
			LEVEL 1 FOR 20.0;
			LEVEL U FOR 20.0;
			LEVEL 1 FOR 100.0;
			LEVEL U FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL U FOR 20.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL U FOR 360.0;
		LEVEL 0 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 380.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 340.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 480.0;
		LEVEL 0 FOR 60.0;
		LEVEL U FOR 1930.0;
	}
}

TRANSITION_LIST("ron_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 360.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 380.0;
		LEVEL 0 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 340.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 480.0;
		LEVEL 0 FOR 60.0;
		LEVEL U FOR 1930.0;
	}
}

TRANSITION_LIST("ron_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 320.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 360.0;
		LEVEL 0 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 0 FOR 80.0;
		LEVEL U FOR 380.0;
		LEVEL 0 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 340.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 2490.0;
	}
}

TRANSITION_LIST("ron_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 3120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 560.0;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 2490.0;
	}
}

TRANSITION_LIST("ron_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 540.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 420.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL U FOR 320.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 440.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 360.0;
		LEVEL 0 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 380.0;
		LEVEL 1 FOR 80.0;
		LEVEL U FOR 500.0;
		LEVEL 0 FOR 80.0;
		LEVEL U FOR 340.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL U FOR 480.0;
		LEVEL 0 FOR 60.0;
		LEVEL U FOR 1930.0;
	}
}

TRANSITION_LIST("ron_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 3120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 560.0;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 2490.0;
	}
}

TRANSITION_LIST("ron_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 3120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 560.0;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 2490.0;
	}
}

TRANSITION_LIST("ron_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 3120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 560.0;
			LEVEL U FOR 20.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 2490.0;
	}
}

TRANSITION_LIST("cache_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("cache_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("cache_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("cache_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("cache_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("cache_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("cache_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("cache_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 270.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 260.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 140.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 460.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 280.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 320.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 2110.0;
	}
}

TRANSITION_LIST("FLAG_OUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("FLAG_OUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("FLAG_OUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("FLAG_OUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4910.0;
		LEVEL 1 FOR 460.0;
		LEVEL 0 FOR 4630.0;
	}
}

TRANSITION_LIST("FLAG_OUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("FLAG_OUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("FLAG_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("FLAG_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ALU_OUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("ALU_OUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("ALU_OUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("ALU_OUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("ALU_OUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("ALU_OUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("ALU_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 540.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("ALU_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7330.0;
		LEVEL 1 FOR 40.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 500.0;
		LEVEL Z FOR 2070.0;
	}
}

TRANSITION_LIST("MEM_DATA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 40.0;
		LEVEL U FOR 260.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 60.0;
		LEVEL U FOR 700.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL U FOR 960.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL U FOR 920.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 980.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 3370.0;
	}
}

TRANSITION_LIST("MEM_DATA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL U FOR 260.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 700.0;
		LEVEL 1 FOR 120.0;
		LEVEL U FOR 960.0;
		LEVEL 0 FOR 120.0;
		LEVEL U FOR 920.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 940.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1060.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 940.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 3370.0;
	}
}

TRANSITION_LIST("MEM_DATA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL U FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 700.0;
		LEVEL 0 FOR 2240.0;
		LEVEL U FOR 920.0;
		LEVEL 0 FOR 5510.0;
	}
}

TRANSITION_LIST("MEM_DATA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1450.0;
		LEVEL U FOR 960.0;
		LEVEL 0 FOR 7590.0;
	}
}

TRANSITION_LIST("MEM_DATA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1100.0;
		LEVEL U FOR 920.0;
		LEVEL 0 FOR 1120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 940.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 940.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 3370.0;
	}
}

TRANSITION_LIST("MEM_DATA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2530.0;
		LEVEL U FOR 920.0;
		LEVEL 0 FOR 6550.0;
	}
}

TRANSITION_LIST("MEM_DATA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2410.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 940.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 3370.0;
	}
}

TRANSITION_LIST("MEM_DATA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6650.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 3330.0;
	}
}

TRANSITION_LIST("MEM_ADDR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 20.0;
				LEVEL 0 FOR 20.0;
			}
			LEVEL Z FOR 900.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("MEM_ADDR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 900.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("MEM_ADDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 940.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 900.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 900.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("MEM_ADDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 940.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 900.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 900.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 900.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 900.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("MEM_ADDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 940.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 900.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 900.0;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("MEM_ADDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 120.0;
			LEVEL Z FOR 900.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("MEM_ADDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 120.0;
			LEVEL Z FOR 900.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("MEM_ADDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 240.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL Z FOR 680.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 120.0;
			LEVEL Z FOR 900.0;
		}
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 920.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 120.0;
		LEVEL Z FOR 2250.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 1 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("DF_ADDRESS_SET[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 470.0;
		LEVEL 0 FOR 200.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 520.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 400.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 5140.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 2550.0;
	}
}

TRANSITION_LIST("cach_address[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 100.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cach_address[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cach_address[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cach_address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cach_address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cach_address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cach_address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cach_address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 160.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL X FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 320.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL X FOR 120.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_CACHE[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("SP_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2870.0;
		LEVEL 1 FOR 460.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 2060.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 580.0;
		LEVEL 0 FOR 2990.0;
	}
}

TRANSITION_LIST("SP_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3330.0;
		LEVEL 1 FOR 3100.0;
		LEVEL 0 FOR 3570.0;
	}
}

TRANSITION_LIST("STACK_OUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3310.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 2660.0;
		LEVEL 0 FOR 2990.0;
	}
}

TRANSITION_LIST("STACK_OUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2850.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1020.0;
		LEVEL 1 FOR 1620.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 3570.0;
	}
}

TRANSITION_LIST("STACK_OUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4350.0;
		LEVEL 1 FOR 1620.0;
		LEVEL 0 FOR 4030.0;
	}
}

TRANSITION_LIST("STACK_OUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("STACK_OUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3310.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2060.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 2990.0;
	}
}

TRANSITION_LIST("STACK_OUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("STACK_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("STACK_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2610.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2610.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 2610.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2750.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 1 FOR 440.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2520.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 2610.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("DATA_TO_STACK[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("over_flag")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4910.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5070.0;
	}
}

TRANSITION_LIST("stack_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2830.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 520.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2950.0;
	}
}

TRANSITION_LIST("stack_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2850.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 420.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 540.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 2950.0;
	}
}

TRANSITION_LIST("cb[32]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2830.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2990.0;
	}
}

TRANSITION_LIST("cb[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 403;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 1940.0;
	}
}

TRANSITION_LIST("cb[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7930.0;
		LEVEL 1 FOR 2070.0;
	}
}

TRANSITION_LIST("cb[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5410.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2950.0;
	}
}

TRANSITION_LIST("cb[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5350.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 2950.0;
	}
}

TRANSITION_LIST("cb[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2810.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 380.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 500.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 5030.0;
	}
}

TRANSITION_LIST("cb[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 710.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 3120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2490.0;
	}
}

TRANSITION_LIST("cb[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 730.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 560.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1930.0;
	}
}

TRANSITION_LIST("cb[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 690.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 360.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1930.0;
	}
}

TRANSITION_LIST("cb[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 670.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 520.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 520.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1990.0;
	}
}

TRANSITION_LIST("cb[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 520.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 1990.0;
	}
}

TRANSITION_LIST("cb[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2050.0;
	}
}

TRANSITION_LIST("cb[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 360.0;
			LEVEL 0 FOR 220.0;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 220.0;
		}
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 220.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 360.0;
		LEVEL 0 FOR 2070.0;
	}
}

TRANSITION_LIST("cb[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 410.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 580.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 440.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 560.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 580.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2070.0;
	}
}

TRANSITION_LIST("cb[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 900.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 2230.0;
	}
}

TRANSITION_LIST("cb[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 270.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 320.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 340.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 460.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 2110.0;
	}
}

TRANSITION_LIST("cb[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 900.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 2250.0;
	}
}

TRANSITION_LIST("cb[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 680.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 940.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 140.0;
			LEVEL 0 FOR 900.0;
		}
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 920.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 2250.0;
	}
}

TRANSITION_LIST("cb[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL Z FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL Z FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 220.0;
			LEVEL Z FOR 40.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 20.0;
				LEVEL 1 FOR 80.0;
			}
			LEVEL 0 FOR 220.0;
		}
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 220.0;
		LEVEL Z FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
		LEVEL Z FOR 1930.0;
	}
}

TRANSITION_LIST("cb[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("cb[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 9950.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CACHE_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "CACHE_CLK[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CACHE_CLK[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CACHE_CLK[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CACHE_CLK[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "cache_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT_CLK[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT_CLK[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT_CLK[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT_CLK[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "lpm_dff0:inst7|lpm_ff:lpm_ff_component|dffs[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "cmd1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESSING_TYPE_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "OP_CODE_OUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "PARCER_RON_NUM_OUT_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
	CHILDREN = 66, 67;
}

DISPLAY_LINE
{
	CHANNEL = "PARCER_RON_NUM_OUT_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "PARCER_RON_NUM_OUT_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "DF_COUNTER";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
	CHILDREN = 69, 70, 71, 72;
}

DISPLAY_LINE
{
	CHANNEL = "DF_COUNTER[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "DF_COUNTER[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "DF_COUNTER[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "DF_COUNTER[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "DF_RON_NUM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
	CHILDREN = 74, 75;
}

DISPLAY_LINE
{
	CHANNEL = "DF_RON_NUM[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "DF_RON_NUM[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "OP0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
	CHILDREN = 77, 78, 79, 80, 81, 82, 83, 84;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 76;
}

DISPLAY_LINE
{
	CHANNEL = "OP1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 0;
	CHILDREN = 86, 87, 88, 89, 90, 91, 92, 93;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "OP1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 85;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
	CHILDREN = 95, 96, 97, 98, 99, 100, 101, 102;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ron_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "cb";
	EXPAND_STATUS = EXPANDED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 0;
	CHILDREN = 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136;
}

DISPLAY_LINE
{
	CHANNEL = "cb[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "cb[32]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 103;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
	CHILDREN = 138, 139, 140, 141, 142, 143, 144, 145;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "FLAG_OUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 0;
	CHILDREN = 147, 148, 149, 150, 151, 152, 153, 154;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "ALU_OUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 0;
	CHILDREN = 156, 157, 158, 159, 160, 161, 162, 163;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_DATA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 155;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 0;
	CHILDREN = 165, 166, 167, 168, 169, 170, 171, 172;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_ADDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 164;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 0;
	CHILDREN = 174, 175, 176, 177, 178, 179, 180, 181;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "DF_ADDRESS_SET[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 173;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 0;
	CHILDREN = 183, 184, 185, 186, 187, 188, 189, 190;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "cach_address[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 182;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 0;
	CHILDREN = 192, 193, 194, 195, 196, 197, 198, 199;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_CACHE[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 191;
}

DISPLAY_LINE
{
	CHANNEL = "SP_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 0;
	CHILDREN = 201, 202;
}

DISPLAY_LINE
{
	CHANNEL = "SP_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 200;
}

DISPLAY_LINE
{
	CHANNEL = "SP_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 200;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 0;
	CHILDREN = 204, 205, 206, 207, 208, 209, 210, 211;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "STACK_OUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 203;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 0;
	CHILDREN = 213, 214, 215, 216, 217, 218, 219, 220;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 217;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_TO_STACK[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 212;
}

DISPLAY_LINE
{
	CHANNEL = "over_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 221;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "stack_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 0;
	CHILDREN = 223, 224;
}

DISPLAY_LINE
{
	CHANNEL = "stack_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 222;
}

DISPLAY_LINE
{
	CHANNEL = "stack_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 222;
}

TIME_BAR
{
	TIME = 70000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 110000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 330421;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 410000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 450000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 510000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 590000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 890000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 1030000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 2830000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 5140000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 5680000;
	MASTER = FALSE;
}
;
